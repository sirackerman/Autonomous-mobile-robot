<?xml version="1.0"?>
<launch>

       <!-- Set use_sim_time parameter before launching nodes -->
    <param name="/use_sim_time" value="true"/>

     <!-- Launch the robot with cameras but without RViz -->
    <include file="$(find ros_mobile_robot)/launch/drive_robot.launch">
        <arg name="enable_rviz" value="false"/>
    </include>

    <!-- Small delay to ensure Gazebo and robot are fully loaded -->
    <node pkg="rostopic" type="rostopic" name="dummy_wait" 
          args="echo /clock" output="screen" launch-prefix="bash -c 'sleep 5; $0 $@'" />


     <!-- Create an empty map if it doesn't exist -->
    <node pkg="map_server" type="map_server" name="map_server" 
          args="$(find ros_mobile_robot)/maps/map.yaml" respawn="true">
        <param name="frame_id" value="map"/>
    </node>

     <!-- Launch static transform for map to odom -->
    <node pkg="tf2_ros" type="static_transform_publisher" name="map_to_odom" 
          args="0 0 0 0 0 0 map odom" />


    <!-- Launch ORB-SLAM3 -->
    <include file="$(find orb_slam3_ros_wrapper)/launch/D435i_rgbd_inertial.launch">|
        <arg name="enable_rviz" value="false"/>
        <remap from="/camera/rgb/image_raw" to="/camera/color/image_raw"/>
        <remap from="/camera/depth_registered/image_raw" to="/camera/depth/image_raw"/>
        <remap from="/imu" to="/camera/imu"/>
    </include>

    <!-- Launch point cloud to grid converter -->
    <node pkg="ros_mobile_robot" type="pointcloud_to_grid" name="pointcloud_to_grid" output="screen">
        <param name="resolution" value="0.05"/>
        <param name="height_threshold" value="0.5"/>
        <param name="grid_width" value="1000"/>
        <param name="grid_height" value="1000"/>
        <param name="grid_origin_x" value="-25.0"/>
        <param name="grid_origin_y" value="-25.0"/>
    </node>

      <!-- Launch move_base -->
    <node pkg="move_base" type="move_base" respawn="true" name="move_base" output="screen">
        <rosparam file="$(find ros_mobile_robot)/config/costmap_common_params.yaml" command="load" ns="global_costmap" />
        <rosparam file="$(find ros_mobile_robot)/config/costmap_common_params.yaml" command="load" ns="local_costmap" />
        <rosparam file="$(find ros_mobile_robot)/config/local_costmap_params.yaml" command="load" />
        <rosparam file="$(find ros_mobile_robot)/config/global_costmap_params.yaml" command="load" />
        <rosparam file="$(find ros_mobile_robot)/config/move_base_params.yaml" command="load" />
        <rosparam file="$(find ros_mobile_robot)/config/dwa_local_planner_params.yaml" command="load" />
        
        <param name="base_global_planner" value="navfn/NavfnROS"/>
        <param name="base_local_planner" value="dwa_local_planner/DWAPlannerROS"/>

 <!-- Remap cmd_vel topics -->
        <remap from="cmd_vel" to="robot_diff_drive_controller/cmd_vel"/>
    </node>

  <!-- Launch navigation stack 
    <include file="$(find ros_mobile_robot)/launch/navigation.launch">
      <arg name="map_file" value="$(find ros_mobile_robot)/maps/map.yaml"/>
    </include>
-->


<!-- Launch exploration node -->
    <node pkg="ros_mobile_robot" type="exploration_node" name="exploration_node" output="screen" respawn="true">
        <param name="min_frontier_size" value="10.0"/>
        <param name="robot_radius" value="0.3"/>
        <param name="information_gain_threshold" value="0.3"/>
    </node>

    <!-- RViz -->
    <node pkg="rviz" type="rviz" name="exploration_rviz" args="-d $(find ros_mobile_robot)/rviz/navigation.rviz" output="screen"/>
</launch>