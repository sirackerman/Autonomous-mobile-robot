<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro" name="mobile_robot">

  <!-- Define some properties for reuse -->
  <xacro:property name="body_height" value="0.3"/>
  <xacro:property name="body_width" value="0.6"/>
  <xacro:property name="body_depth" value="1"/>
  <xacro:property name="wheel_height" value="0.1"/>
  <xacro:property name="wheel_radius" value="0.15"/>
  <xacro:property name="wheel_color" value="yellow"/>

  <!-- Base link -->
  <link name="base_link">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="${body_depth} ${body_width} ${body_height}"/>
      </geometry>
      <material name="green_shade">
        <color rgba="0.2 0.7 0.4 1"/>
      </material>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="${body_depth} ${body_width} ${body_height}"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="1.0"/>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <inertia ixx="0.014167" ixy="0.0" ixz="0.0" iyy="0.026667" iyz="0.0" izz="0.014167"/>
    </inertial>
  </link>

  <!-- Gazebo properties for the base -->
  <gazebo reference="base_link">
    <material>Gazebo/Green</material>
    <mu1>0.5</mu1>
    <mu2>0.5</mu2>
    <selfCollide>false</selfCollide>
  </gazebo>

  <!-- Head of the robot -->
  <link name="head_link">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.2 0.2 0.2"/>
      </geometry>
      <material name="black">
        <color rgba="0 0 0 1"/>
      </material>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.2 0.2 0.2"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="0.5"/>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <inertia ixx="0.001667" ixy="0.0" ixz="0.0" iyy="0.001667" iyz="0.0" izz="0.001667"/>
    </inertial>
  </link>

  <!-- Gazebo properties for the head -->
  <gazebo reference="head_link">
    <material>Gazebo/Black</material>
  </gazebo>

  <!-- Fixed joint for the head -->
  <joint name="head_joint" type="fixed">
    <parent link="base_link"/>
    <child link="head_link"/>
    <origin xyz="0 0 ${body_height/2 + 0.1}" rpy="0 0 0"/>
  </joint>

  <!-- Wheel macro definition -->
  <xacro:macro name="wheel" params="name reflect_x reflect_y">
    <link name="${name}_wheel_link">
      <visual>
        <origin rpy="${pi/2} 0 0" xyz="0 0 0"/>
        <geometry>
          <cylinder length="${wheel_height}" radius="${wheel_radius}"/>
        </geometry>
        <material name="${wheel_color}">
          <color rgba="1 1 0 1"/>
        </material>
      </visual>
      <collision>
        <origin rpy="${pi/2} 0 0" xyz="0 0 0"/>
        <geometry>
          <cylinder length="${wheel_height}" radius="${wheel_radius}"/>
        </geometry>
      </collision>
      <inertial>
        <mass value="0.5"/>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <inertia ixx="0.001667" ixy="0.0" ixz="0.0" iyy="0.001667" iyz="0.0" izz="0.001667"/>
      </inertial>
    </link>

    <joint name="${name}_wheel_joint" type="continuous">
      <parent link="base_link"/>
      <child link="${name}_wheel_link"/>
      <origin xyz="${reflect_x * body_depth/4} ${reflect_y * (body_width/2 + wheel_height/2)} ${-body_height/2}" rpy="0 0 0"/>
      <axis xyz="0 1 0"/>
    </joint>

    <!-- Transmission for wheel -->
    <transmission name="${name}_wheel_trans">
      <type>transmission_interface/SimpleTransmission</type>
      <actuator name="${name}_wheel_motor">
        <mechanicalReduction>1</mechanicalReduction>
      </actuator>
      <joint name="${name}_wheel_joint">
        <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
      </joint>
    </transmission>

    <!-- Gazebo properties for the wheel -->
    <gazebo reference="${name}_wheel_link">
      <material>Gazebo/Yellow</material>
      <mu1>0.9</mu1>
      <mu2>0.9</mu2>
      <selfCollide>false</selfCollide>
    </gazebo>
  </xacro:macro>

  <!-- Wheels: Front-left, Front-right, Rear-left, Rear-right -->
  <xacro:wheel name="front_left" reflect_x="1" reflect_y="1"/>
  <xacro:wheel name="front_right" reflect_x="1" reflect_y="-1"/>
  <xacro:wheel name="rear_left" reflect_x="-1" reflect_y="1"/>
  <xacro:wheel name="rear_right" reflect_x="-1" reflect_y="-1"/>

  <!-- Gazebo plugin for ROS control -->
  <gazebo>
    <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
      <robotNamespace>/mobile_robot</robotNamespace>
    </plugin>
  </gazebo>

</robot>
